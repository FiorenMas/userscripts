// ==UserScript==
// @name            Undiscord
// @description     Delete all messages in a Discord channel or DM (Bulk deletion)
// @version         5.2.3
// @author          victornpb
// @homepageURL     https://github.com/victornpb/undiscord
// @supportURL      https://github.com/victornpb/undiscord/discussions
// @match           https://*.discord.com/app
// @match           https://*.discord.com/channels/*
// @match           https://*.discord.com/login
// @license         MIT
// @namespace       https://github.com/victornpb/deleteDiscordMessages
// @icon            https://victornpb.github.io/undiscord/images/icon128.png
// @contributionURL https://www.buymeacoffee.com/vitim
// @grant           none
// @downloadURL https://raw.githubusercontent.com/FiorenMas/Userscripts/release/release/Undiscord.user.js
// @updateURL https://raw.githubusercontent.com/FiorenMas/Userscripts/release/release/Undiscord.meta.js
// ==/UserScript==
!function(){"use strict";const e={debug(){return t?t("debug",arguments):console.debug.apply(console,arguments)},info(){return t?t("info",arguments):console.info.apply(console,arguments)},verb(){return t?t("verb",arguments):console.log.apply(console,arguments)},warn(){return t?t("warn",arguments):console.warn.apply(console,arguments)},error(){return t?t("error",arguments):console.error.apply(console,arguments)},success(){return t?t("success",arguments):console.info.apply(console,arguments)}};var t;const n=async e=>new Promise((t=>setTimeout(t,e))),i=e=>`${e/36e5|0}h ${e%36e5/6e4|0}m ${e%6e4/1e3|0}s`,s=e=>{return`<x>${t=e,String(t).replace(/[&<"']/g,(e=>({"&":"&amp;","<":"&lt;",'"':"&quot;","'":"&#039;"}[e])))}</x>`;var t},r=e=>/:/.test(e)?(new Date(e).getTime()-14200704e5)*Math.pow(2,22):e,o="[UNDISCORD]";class a{constructor({elm:e,moveHandle:t,options:n}){this.options=c({enabledDrag:!0,enabledResize:!0,minWidth:200,maxWidth:1/0,minHeight:100,maxHeight:1/0,dragAllowX:!0,dragAllowY:!0,resizeAllowX:!0,resizeAllowY:!0,draggingClass:"drag",useMouseEvents:!0,useTouchEvents:!0,createHandlers:!0},n),Object.assign(this,n),n=void 0,e.style.position="fixed",this.drag_m=new d(e,t,0,this.options),this.options.createHandlers&&(this.el_t=l("div",{name:"grab-t"},e),this.drag_t=new d(e,this.el_t,1,this.options),this.el_r=l("div",{name:"grab-r"},e),this.drag_r=new d(e,this.el_r,8,this.options),this.el_b=l("div",{name:"grab-b"},e),this.drag_b=new d(e,this.el_b,2,this.options),this.el_l=l("div",{name:"grab-l"},e),this.drag_l=new d(e,this.el_l,4,this.options),this.el_tl=l("div",{name:"grab-tl"},e),this.drag_tl=new d(e,this.el_tl,5,this.options),this.el_tr=l("div",{name:"grab-tr"},e),this.drag_tr=new d(e,this.el_tr,9,this.options),this.el_br=l("div",{name:"grab-br"},e),this.drag_br=new d(e,this.el_br,10,this.options),this.el_bl=l("div",{name:"grab-bl"},e),this.drag_bl=new d(e,this.el_bl,6,this.options))}}class d{constructor(e,t,n,i){Object.assign(this,i),i=void 0,this._targetElm=e,this._handleElm=t;let s,r,o,a,d,l,c=window.innerWidth,h=window.innerHeight;const u=(e,t,n)=>e<t?t:e>n?n:e;let p=0===n?(e,t)=>{const n=e-s,i=u(o+(t-r),0,h-l),p=u(a+n,0,c-d);this._targetElm.style.top=i+"px",this._targetElm.style.left=p+"px"}:(e,t)=>{e=u(e,0,c),t=u(t,0,h);const i=e-s,p=t-r,g=4&n?-1:1,m=1&n?-1:1,v=this.maxWidth-d,b=this.minWidth-d,f=this.maxHeight-l,x=this.minHeight-l,w=o+u(p*m,x,f)*m,y=a+u(i*g,b,v)*g,k=d+u(i*g,b,v),I=l+u(p*m,x,f);1&n&&(this._targetElm.style.top=w+"px",this._targetElm.style.height=I+"px"),2&n&&(this._targetElm.style.height=I+"px"),4&n&&(this._targetElm.style.left=y+"px",this._targetElm.style.width=k+"px"),8&n&&(this._targetElm.style.width=k+"px")};this._dragStartHandler=function(e){const t="touchstart"===e.type;if(1===e.buttons||1===e.which||t){e.preventDefault();const n=t?e.touches[0].clientX:e.clientX,i=t?e.touches[0].clientY:e.clientY;s=n,r=i,c=window.innerWidth,h=window.innerHeight,o=this._targetElm.offsetTop,a=this._targetElm.offsetLeft,d=this._targetElm.clientWidth,l=this._targetElm.clientHeight,this.useMouseEvents&&(document.addEventListener("mousemove",this._dragMoveHandler),document.addEventListener("mouseup",this._dragEndHandler)),this.useTouchEvents&&(document.addEventListener("touchmove",this._dragMoveHandler,{passive:!1}),document.addEventListener("touchend",this._dragEndHandler)),this._targetElm.classList.add(this.draggingClass)}}.bind(this),this._dragMoveHandler=function(e){let t,n;if(e.preventDefault(),"touchmove"===e.type){const i=e.touches[0];t=i.clientX,n=i.clientY}else{if(1!==(e.buttons||e.which))return void this._dragEndHandler();t=e.clientX,n=e.clientY}p(t,n)}.bind(this),this._dragEndHandler=function(e){this.useMouseEvents&&(document.removeEventListener("mousemove",this._dragMoveHandler),document.removeEventListener("mouseup",this._dragEndHandler)),this.useTouchEvents&&(document.removeEventListener("touchmove",this._dragMoveHandler),document.removeEventListener("touchend",this._dragEndHandler)),this._targetElm.classList.remove(this.draggingClass)}.bind(this),this.enable()}enable(){this.destroy(),this.useMouseEvents&&this._handleElm.addEventListener("mousedown",this._dragStartHandler),this.useTouchEvents&&this._handleElm.addEventListener("touchstart",this._dragStartHandler,{passive:!1})}destroy(){this._targetElm.classList.remove(this.draggingClass),this.useMouseEvents&&(this._handleElm.removeEventListener("mousedown",this._dragStartHandler),document.removeEventListener("mousemove",this._dragMoveHandler),document.removeEventListener("mouseup",this._dragEndHandler)),this.useTouchEvents&&(this._handleElm.removeEventListener("touchstart",this._dragStartHandler),document.removeEventListener("touchmove",this._dragMoveHandler),document.removeEventListener("touchend",this._dragEndHandler))}}function l(e="div",t,n){const i=document.createElement(e);return t&&Object.entries(t).forEach((([e,t])=>i.setAttribute(e,t))),n&&n.appendChild(i),i}function c(e,t){function n(e){return null!==e&&"object"==typeof e}function i(e,t){return Object.prototype.hasOwnProperty.call(e,t)}if(n(t))for(let s in e)i(e,s)&&i(t,s)&&void 0!==t[s]&&(n(e[s])?c(e[s],t[s]):e[s]=t[s]);return e}function h(e){const t=document.createElement("div");return t.innerHTML=e,t.removeChild(t.firstElementChild)}function u(e){const t=document.createElement("style");return t.appendChild(document.createTextNode(e)),document.head.appendChild(t),t}const p={init(){u('\nbody.undiscord-pick-message [data-list-id="chat-messages"] {\n  background-color: var(--background-secondary-alt);\n  box-shadow: inset 0 0 0px 2px var(--button-outline-brand-border);\n}\n\nbody.undiscord-pick-message [id^="message-content-"]:hover {\n  cursor: pointer;\n  cursor: cell;\n  background: var(--background-message-automod-hover);\n}\nbody.undiscord-pick-message [id^="message-content-"]:hover::after {\n  position: absolute;\n  top: calc(50% - 11px);\n  left: 4px;\n  z-index: 1;\n  width: 65px;\n  height: 22px;\n  line-height: 22px;\n  font-family: var(--font-display);\n  background-color: var(--button-secondary-background);\n  color: var(--header-secondary);\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n  text-align: center;\n  border-radius: 3px;\n  content: \'This ðŸ‘‰\';\n}\nbody.undiscord-pick-message.before [id^="message-content-"]:hover::after {\n  content: \'Before ðŸ‘†\';\n}\nbody.undiscord-pick-message.after [id^="message-content-"]:hover::after {\n  content: \'After ðŸ‘‡\';\n}\n')},grab:e=>new Promise(((t,n)=>{document.body.classList.add("undiscord-pick-message"),e&&document.body.classList.add(e),document.addEventListener("click",(function n(i){const s=i.target.closest('[id^="message-content-"]');if(s){i.preventDefault(),i.stopPropagation(),i.stopImmediatePropagation(),e&&document.body.classList.remove(e),document.body.classList.remove("undiscord-pick-message"),document.removeEventListener("click",n);try{t(s.id.match(/message-content-(\d+)/)[1])}catch(i){t(null)}}}))}))};function g(){const e=document.body.appendChild(document.createElement("iframe")).contentWindow.localStorage;return JSON.parse(e.user_id_cache)}function m(){const e=location.href.match(/channels\/([\w@]+)\/(\d+)/);if(e)return e[1];alert("Could not find the Guild ID!\nPlease make sure you are on a Server or DM.")}function v(){const e=location.href.match(/channels\/([\w@]+)\/(\d+)/);if(e)return e[2];alert("Could not find the Channel ID!\nPlease make sure you are on a Channel or DM.")}function b(){try{return function(){window.dispatchEvent(new Event("beforeunload"));const t=document.body.appendChild(document.createElement("iframe")).contentWindow.localStorage;try{return JSON.parse(t.token)}catch{return e.info("Could not automatically detect Authorization Token in local storage!"),e.info("Attempting to grab token using webpack"),(window.webpackChunkdiscord_app.push([[""],{},e=>{window.m=[];for(let t in e.c)window.m.push(e.c[t])}]),window.m).find((e=>void 0!==e?.exports?.default?.getToken)).exports.default.getToken()}}()}catch(t){e.verb(t),e.error("Could not automatically detect Authorization Token!"),e.info("Please make sure Undiscord is up to date"),e.debug('Alternatively, you can try entering a Token manually in the "Advanced Settings" section.')}return""}window.messagePicker=p;const f="[UNDISCORD]",x=new class{options={authToken:null,authorId:null,guildId:null,channelId:null,minId:null,maxId:null,content:null,hasLink:null,hasFile:null,includeNsfw:null,includePinned:null,pattern:null,searchDelay:null,deleteDelay:null,maxAttempt:2,askForConfirmation:!0};state={running:!1,delCount:0,failCount:0,grandTotal:0,offset:0,iterations:0,_seachResponse:null,_messagesToDelete:[],_skippedMessages:[]};stats={startTime:new Date,throttledCount:0,throttledTotalTime:0,lastPing:null,avgPing:null,etr:0};onStart=void 0;onProgress=void 0;onStop=void 0;resetState(){this.state={running:!1,delCount:0,failCount:0,grandTotal:0,offset:0,iterations:0,_seachResponse:null,_messagesToDelete:[],_skippedMessages:[]},this.options.askForConfirmation=!0}async runBatch(t){if(this.state.running)return e.error("Already running!");e.info(`Runnning batch with queue of ${t.length} jobs`);for(let n=0;n<t.length;n++){const i=t[n];if(e.info("Starting job...",`(${n+1}/${t.length})`),this.options={...this.options,...i},await this.run(!0),!this.state.running)break;e.info("Job ended.",`(${n+1}/${t.length})`),this.resetState(),this.options.askForConfirmation=!1,this.state.running=!0}e.info("Batch finished."),this.state.running=!1}async run(t=!1){if(this.state.running&&!t)return e.error("Already running!");this.state.running=!0,this.stats.startTime=new Date,e.success(`\nStarted at ${this.stats.startTime.toLocaleString()}`),e.debug(`authorId = "${s(this.options.authorId)}"`,`guildId = "${s(this.options.guildId)}"`,`channelId = "${s(this.options.channelId)}"`,`minId = "${s(this.options.minId)}"`,`maxId = "${s(this.options.maxId)}"`,`hasLink = ${!!this.options.hasLink}`,`hasFile = ${!!this.options.hasFile}`),this.onStart&&this.onStart(this.state,this.stats);do{if(this.state.iterations++,e.verb("Fetching messages..."),await this.search(),await this.filterResponse(),e.verb(`Grand total: ${this.state.grandTotal}`,`(Messages in current page: ${this.state._seachResponse.messages.length}`,`To be deleted: ${this.state._messagesToDelete.length}`,`Skipped: ${this.state._skippedMessages.length})`,`offset: ${this.state.offset}`),this.printStats(),this.calcEtr(),e.verb(`Estimated time remaining: ${i(this.stats.etr)}`),this.state._messagesToDelete.length>0){if(!1===await this.confirm()){this.state.running=!1;break}await this.deleteMessagesFromList()}else if(this.state._skippedMessages.length>0){const t=this.state.offset;this.state.offset+=this.state._skippedMessages.length,e.verb("There's nothing we can delete on this page, checking next page..."),e.verb(`Skipped ${this.state._skippedMessages.length} out of ${this.state._seachResponse.messages.length} in this page.`,`(Offset was ${t}, ajusted to ${this.state.offset})`)}else{if(e.verb("Ended because API returned an empty page."),e.verb("[End state]",this.state),t)break;this.state.running=!1}e.verb(`Waiting ${(this.options.searchDelay/1e3).toFixed(2)}s before next page...`),await n(this.options.searchDelay)}while(this.state.running);this.stats.endTime=new Date,e.success(`Ended at ${this.stats.endTime.toLocaleString()}! Total time: ${i(this.stats.endTime.getTime()-this.stats.startTime.getTime())}`),this.printStats(),e.debug(`Deleted ${this.state.delCount} messages, ${this.state.failCount} failed.\n`),this.onStop&&this.onStop(this.state,this.stats)}stop(){this.state.running=!1,this.onStop&&this.onStop(this.state,this.stats)}calcEtr(){this.stats.etr=this.options.searchDelay*Math.round(this.state.grandTotal/25)+(this.options.deleteDelay+this.stats.avgPing)*this.state.grandTotal}async confirm(){if(!this.options.askForConfirmation)return!0;e.verb("Waiting for your confirmation...");const t=this.state._messagesToDelete.map((e=>`${e.author.username}#${e.author.discriminator}: ${e.attachments.length?"[ATTACHMENTS]":e.content}`)).join("\n");return await(async e=>new Promise((t=>setTimeout((()=>t(window.confirm(e))),10))))(`Do you want to delete ~${this.state.grandTotal} messages? (Estimated time: ${i(this.stats.etr)})(The actual number of messages may be less, depending if you're using filters to skip some messages)\n\n---- Preview ----\n`+t)?(e.verb("OK"),this.options.askForConfirmation=!1,!0):(e.error("Aborted by you!"),!1)}async search(){let t,i;t="@me"===this.options.guildId?`https://discord.com/api/v9/channels/${this.options.channelId}/messages/`:`https://discord.com/api/v9/guilds/${this.options.guildId}/messages/`;try{this.beforeRequest(),i=await fetch(t+"search?"+(s=[["author_id",this.options.authorId||void 0],["channel_id",("@me"!==this.options.guildId?this.options.channelId:void 0)||void 0],["min_id",this.options.minId?r(this.options.minId):void 0],["max_id",this.options.maxId?r(this.options.maxId):void 0],["sort_by","timestamp"],["sort_order","desc"],["offset",this.state.offset],["has",this.options.hasLink?"link":void 0],["has",this.options.hasFile?"file":void 0],["content",this.options.content||void 0],["include_nsfw",!!this.options.includeNsfw||void 0]],s.filter((e=>void 0!==e[1])).map((e=>e[0]+"="+encodeURIComponent(e[1]))).join("&")),{headers:{Authorization:this.options.authToken}}),this.afterRequest()}catch(t){throw this.state.running=!1,e.error("Search request threw an error:",t),t}var s;if(202===i.status){let t=1e3*(await i.json()).retry_after;return t=t||this.stats.searchDelay,this.stats.throttledCount++,this.stats.throttledTotalTime+=t,e.warn(`This channel isn't indexed yet. Waiting ${t}ms for discord to index it...`),await n(t),await this.search()}if(!i.ok){if(429===i.status){let t=1e3*(await i.json()).retry_after;return t=t||this.stats.searchDelay,this.stats.throttledCount++,this.stats.throttledTotalTime+=t,this.stats.searchDelay+=t,t=this.stats.searchDelay,e.warn(`Being rate limited by the API for ${t}ms! Increasing search delay...`),this.printStats(),e.verb(`Cooling down for ${2*t}ms before retrying...`),await n(2*t),await this.search()}throw this.state.running=!1,e.error(`Error searching messages, API responded with status ${i.status}!\n`,await i.json()),i}const a=await i.json();return this.state._seachResponse=a,console.log(o,"search",a),a}async filterResponse(){const t=this.state._seachResponse,n=t.total_results;n>this.state.grandTotal&&(this.state.grandTotal=n);const i=t.messages.map((e=>e.find((e=>!0===e.hit))));let s=i;s=s.filter((e=>0===e.type||e.type>=6&&e.type<=21)),s=s.filter((e=>!e.pinned||this.options.includePinned));try{const e=new RegExp(this.options.pattern,"i");s=s.filter((t=>e.test(t.content)))}catch(t){e.warn("Ignoring RegExp because pattern is malformed!",t)}const r=i.filter((e=>!s.find((t=>t.id===e.id))));this.state._messagesToDelete=s,this.state._skippedMessages=r,console.log(o,"filterResponse",this.state)}async deleteMessagesFromList(){for(let t=0;t<this.state._messagesToDelete.length;t++){const i=this.state._messagesToDelete[t];if(!this.state.running)return e.error("Stopped by you!");e.debug(`[${this.state.delCount+1}/${this.state.grandTotal}] <sup>${new Date(i.timestamp).toLocaleString()}</sup> <b>${s(i.author.username+"#"+i.author.discriminator)}</b>: <i>${s(i.content).replace(/\n/g,"â†µ")}</i>`+(i.attachments.length?s(JSON.stringify(i.attachments)):""),`<sup>{ID:${s(i.id)}}</sup>`);let r=0;for(;r<this.options.maxAttempt;){if("RETRY"!==await this.deleteMessage(i))break;r++,e.verb(`Retrying in ${this.options.deleteDelay}ms... (${r}/${this.options.maxAttempt})`),await n(this.options.deleteDelay)}this.calcEtr(),this.onProgress&&this.onProgress(this.state,this.stats),await n(this.options.deleteDelay)}}async deleteMessage(t){const i=`https://discord.com/api/v9/channels/${t.channel_id}/messages/${t.id}`;let r;try{this.beforeRequest(),r=await fetch(i,{method:"DELETE",headers:{Authorization:this.options.authToken}}),this.afterRequest()}catch(n){return e.error("Delete request throwed an error:",n),e.verb("Related object:",s(JSON.stringify(t))),this.state.failCount++,"FAILED"}if(!r.ok){if(429===r.status){const t=1e3*(await r.json()).retry_after;return this.stats.throttledCount++,this.stats.throttledTotalTime+=t,this.options.deleteDelay=t,e.warn(`Being rate limited by the API for ${t}ms! Adjusted delete delay to ${this.options.deleteDelay}ms.`),this.printStats(),e.verb(`Cooling down for ${2*t}ms before retrying...`),await n(2*t),"RETRY"}{const n=await r.text();try{const i=JSON.parse(n);return 400===r.status&&50083===i.code?(e.warn("Error deleting message (Thread is archived). Will increment offset so we don't search this in the next page..."),this.state.offset++,this.state.failCount++,"FAIL_SKIP"):(e.error(`Error deleting message, API responded with status ${r.status}!`,i),e.verb("Related object:",s(JSON.stringify(t))),this.state.failCount++,"FAILED")}catch(t){e.error(`Fail to parse JSON. API responded with status ${r.status}!`,n)}}}return this.state.delCount++,"OK"}#e=0;beforeRequest(){this.#e=Date.now()}afterRequest(){this.stats.lastPing=Date.now()-this.#e,this.stats.avgPing=this.stats.avgPing>0?.9*this.stats.avgPing+.1*this.stats.lastPing:this.stats.lastPing}printStats(){e.verb(`Delete delay: ${this.options.deleteDelay}ms, Search delay: ${this.options.searchDelay}ms`,`Last Ping: ${this.stats.lastPing}ms, Average Ping: ${0|this.stats.avgPing}ms`),e.verb(`Rate Limited: ${this.stats.throttledCount} times.`,`Total time throttled: ${i(this.stats.throttledTotalTime)}.`)}};p.init();const w={undiscordWindow:null,undiscordBtn:null,logArea:null,autoScroll:null,progressMain:null,progressIcon:null,percent:null},y=e=>w.undiscordWindow.querySelector(e);function k(e="",t){w.logArea.insertAdjacentHTML("beforeend",`<div class="log log-${e}">${Array.from(t).map((e=>"object"==typeof e?JSON.stringify(e,e instanceof Error&&Object.getOwnPropertyNames(e)):e)).join("\t")}</div>`),w.autoScroll.checked&&w.logArea.querySelector("div:last-child").scrollIntoView(!1),"error"===e&&console.error(f,...Array.from(t))}async function I(){console.log(f,"startAction");const t=y("input#authorId").value.trim(),n=y("input#guildId").value.trim(),i=y("input#channelId").value.trim().split(/\s*,\s*/),s=y("input#includeNsfw").checked,r=y("input#search").value.trim(),o=y("input#hasLink").checked,a=y("input#hasFile").checked,d=y("input#includePinned").checked,l=y("input#pattern").value,c=y("input#minId").value.trim(),h=y("input#maxId").value.trim(),u=y("input#minDate").value.trim(),p=y("input#maxDate").value.trim(),g=parseInt(y("input#searchDelay").value.trim()),m=parseInt(y("input#deleteDelay").value.trim()),v=y("input#token").value.trim()||b();if(v){if(!n)return e.error('You must fill the "Server ID" field!');if(w.logArea.innerHTML="",x.resetState(),x.options={...x.options,authToken:v,authorId:t,guildId:n,channelId:1===i.length?i[0]:void 0,minId:c||u,maxId:h||p,content:r,hasLink:o,hasFile:a,includeNsfw:s,includePinned:d,pattern:l,searchDelay:g,deleteDelay:m},i.length>1){const t=i.map((e=>({guildId:n,channelId:e})));try{await x.runBatch(t)}catch(t){e.error("CoreException",t)}}else try{await x.run()}catch(t){e.error("CoreException",t),x.stop()}}}function _(){console.log(f,"stopAction"),x.stop()}!function(){u('\n/* undiscord window */\n#undiscord.browser { box-shadow: var(--elevation-stroke), var(--elevation-high); overflow: hidden; }\n#undiscord.container,\n#undiscord .container { background-color: var(--background-secondary); border-radius: 8px; box-sizing: border-box; cursor: default; flex-direction: column; }\n#undiscord .header { background-color: var(--background-tertiary); height: 48px; align-items: center; min-height: 48px; padding: 0 16px; display: flex; color: var(--header-secondary); cursor: grab; }\n#undiscord .header .icon { color: var(--interactive-normal); margin-right: 8px; flex-shrink: 0; width: 24; height: 24; }\n#undiscord .header .icon:hover { color: var(--interactive-hover); }\n#undiscord .header h3 { font-size: 16px; line-height: 20px; font-weight: 500; font-family: var(--font-display); color: var(--header-primary); flex-shrink: 0; margin-right: 16px; }\n#undiscord .spacer { flex-grow: 1; }\n#undiscord .header .vert-divider { width: 1px; height: 24px; background-color: var(--background-modifier-accent); margin-right: 16px; flex-shrink: 0; }\n#undiscord legend,\n#undiscord label { color: var(--header-secondary); font-size: 12px; line-height: 16px; font-weight: 500; text-transform: uppercase; cursor: default; font-family: var(--font-display); margin-bottom: 8px; }\n#undiscord .multiInput { display: flex; align-items: center; font-size: 16px; box-sizing: border-box; width: 100%; border-radius: 3px; color: var(--text-normal); background-color: var(--input-background); border: none; transition: border-color 0.2s ease-in-out 0s; }\n#undiscord .multiInput :first-child { flex-grow: 1; }\n#undiscord .multiInput button:last-child { margin-right: 4px; }\n#undiscord .input { font-size: 16px; box-sizing: border-box; width: 100%; border-radius: 3px; color: var(--text-normal); background-color: var(--input-background); border: none; transition: border-color 0.2s ease-in-out 0s; padding: 10px; height: 40px; }\n#undiscord fieldset { margin-top: 16px; }\n#undiscord .input-wrapper { display: flex; align-items: center; font-size: 16px; box-sizing: border-box; width: 100%; border-radius: 3px; color: var(--text-normal); background-color: var(--input-background); border: none; transition: border-color 0.2s ease-in-out 0s; }\n#undiscord input[type="text"],\n#undiscord input[type="search"],\n#undiscord input[type="password"],\n#undiscord input[type="datetime-local"],\n#undiscord input[type="number"],\n#undiscord input[type="range"] { font-size: 16px; box-sizing: border-box; width: 100%; border-radius: 3px; color: var(--text-normal); background-color: var(--input-background); border: none; transition: border-color 0.2s ease-in-out 0s; padding: 10px; height: 40px; }\n#undiscord .divider,\n#undiscord hr { border: none; margin-bottom: 24px; padding-bottom: 4px; border-bottom: 1px solid var(--background-modifier-accent); }\n#undiscord .sectionDescription { margin-bottom: 16px; color: var(--header-secondary); font-size: 14px; line-height: 20px; font-weight: 400; }\n#undiscord a { color: var(--text-link); text-decoration: none; }\n#undiscord .btn,\n#undiscord button { position: relative; display: flex; -webkit-box-pack: center; justify-content: center; -webkit-box-align: center; align-items: center; box-sizing: border-box; background: none; border: none; border-radius: 3px; font-size: 14px; font-weight: 500; line-height: 16px; padding: 2px 16px; user-select: none; /* sizeSmall */     width: 60px; height: 32px; min-width: 60px; min-height: 32px; /* lookFilled colorPrimary */     color: rgb(255, 255, 255); background-color: var(--button-secondary-background); }\n#undiscord .sizeMedium { width: 96px; height: 38px; min-width: 96px; min-height: 38px; }\n#undiscord .sizeMedium.icon { width: 38px; min-width: 38px; }\n#undiscord sup { vertical-align: top; }\n/* lookFilled colorPrimary */\n#undiscord .accent { background-color: var(--brand-experiment); }\n#undiscord .danger { background-color: var(--button-danger-background); }\n#undiscord .positive { background-color: var(--button-positive-background); }\n#undiscord .info { font-size: 12px; line-height: 16px; padding: 8px 10px; color: var(--text-muted); }\n/* Scrollbar */\n#undiscord .scroll::-webkit-scrollbar { width: 8px; height: 8px; }\n#undiscord .scroll::-webkit-scrollbar-corner { background-color: transparent; }\n#undiscord .scroll::-webkit-scrollbar-thumb { background-clip: padding-box; border: 2px solid transparent; border-radius: 4px; background-color: var(--scrollbar-thin-thumb); min-height: 40px; }\n#undiscord .scroll::-webkit-scrollbar-track { border-color: var(--scrollbar-thin-track); background-color: var(--scrollbar-thin-track); border: 2px solid var(--scrollbar-thin-track); }\n/* fade scrollbar */\n#undiscord .scroll::-webkit-scrollbar-thumb,\n#undiscord .scroll::-webkit-scrollbar-track { visibility: hidden; }\n#undiscord .scroll:hover::-webkit-scrollbar-thumb,\n#undiscord .scroll:hover::-webkit-scrollbar-track { visibility: visible; }\n/**** functional classes ****/\n#undiscord.redact .priv { display: none !important; }\n#undiscord.redact x:not(:active) { color: transparent !important; background-color: var(--primary-700) !important; cursor: default; user-select: none; }\n#undiscord.redact x:hover { position: relative; }\n#undiscord.redact x:hover::after { content: "Redacted information (Streamer mode: ON)"; position: absolute; display: inline-block; top: -32px; left: -20px; padding: 4px; width: 150px; font-size: 8pt; text-align: center; white-space: pre-wrap; background-color: var(--background-floating); -webkit-box-shadow: var(--elevation-high); box-shadow: var(--elevation-high); color: var(--text-normal); border-radius: 5px; pointer-events: none; }\n#undiscord.redact [priv] { -webkit-text-security: disc !important; }\n#undiscord :disabled { display: none; }\n/**** layout and utility classes ****/\n#undiscord,\n#undiscord * { box-sizing: border-box; }\n#undiscord .col { display: flex; flex-direction: column; }\n#undiscord .row { display: flex; flex-direction: row; align-items: center; }\n#undiscord .mb1 { margin-bottom: 8px; }\n#undiscord .log { margin-bottom: 0.25em; }\n#undiscord .log-debug { color: inherit; }\n#undiscord .log-info { color: #00b0f4; }\n#undiscord .log-verb { color: #72767d; }\n#undiscord .log-warn { color: #faa61a; }\n#undiscord .log-error { color: #f04747; }\n#undiscord .log-success { color: #43b581; }\n'),u("\n/**** Undiscord Button ****/\n#undicord-btn { position: relative; width: auto; height: 24px; margin: 0 8px; cursor: pointer; color: var(--interactive-normal); flex: 0 0 auto; }\n#undicord-btn progress { position: absolute; top: 23px; left: -4px; width: 32px; height: 12px; display: none; }\n#undicord-btn.running { color: var(--button-danger-background) !important; }\n#undicord-btn.running progress { display: block; }\n/**** Undiscord Interface ****/\n#undiscord { position: fixed; z-index: 100; top: 58px; right: 10px; display: flex; flex-direction: column; width: 800px; height: 80vh; min-width: 610px; max-width: 100vw; min-height: 448px; max-height: 100vh; color: var(--text-normal); border-radius: 4px; background-color: var(--background-secondary); box-shadow: var(--elevation-stroke), var(--elevation-high); will-change: top, left, width, height; }\n#undiscord .header .icon { cursor: pointer; }\n#undiscord .window-body { height: calc(100% - 48px); }\n#undiscord .sidebar { overflow: hidden scroll; overflow-y: auto; width: 270px; min-width: 250px; height: 100%; max-height: 100%; padding: 8px; background: var(--background-secondary); }\n#undiscord .sidebar legend,\n#undiscord .sidebar label { display: block; width: 100%; }\n#undiscord .main { display: flex; max-width: calc(100% - 250px); background-color: var(--background-primary); flex-grow: 1; }\n#undiscord.hide-sidebar .sidebar { display: none; }\n#undiscord.hide-sidebar .main { max-width: 100%; }\n#undiscord #logArea { font-family: Consolas, Liberation Mono, Menlo, Courier, monospace; font-size: 0.75rem; overflow: auto; padding: 10px; user-select: text; flex-grow: 1; flex-grow: 1; cursor: auto; }\n#undiscord .tbar { padding: 8px; background-color: var(--background-secondary-alt); }\n#undiscord .tbar button { margin-right: 4px; margin-bottom: 4px; }\n#undiscord .footer { cursor: se-resize; padding-right: 30px; }\n#undiscord .footer #progressPercent { padding: 0 1em; font-size: small; color: var(--interactive-muted); flex-grow: 1; }\n.resize-handle { position: absolute; bottom: -15px; right: -15px; width: 30px; height: 30px; transform: rotate(-45deg); background: repeating-linear-gradient(0, var(--background-modifier-accent), var(--background-modifier-accent) 1px, transparent 2px, transparent 4px); cursor: nwse-resize; }\n/**** Elements ****/\n#undiscord summary { font-size: 16px; font-weight: 500; line-height: 20px; position: relative; overflow: hidden; margin-bottom: 2px; padding: 6px 10px; cursor: pointer; white-space: nowrap; text-overflow: ellipsis; color: var(--interactive-normal); border-radius: 4px; flex-shrink: 0; }\n#undiscord fieldset { padding-left: 8px; }\n#undiscord legend a { float: right; text-transform: initial; }\n#undiscord progress { height: 8px; margin-top: 4px; flex-grow: 1; }\n#undiscord .importJson { display: flex; flex-direction: row; }\n#undiscord .importJson button { margin-left: 5px; width: fit-content; }\n"),u('\n[name^="grab-"] { position: absolute; --size: 6px; --corner-size: 16px; --offset: -1px; z-index: 9; }\n[name^="grab-"]:hover{ background: rgba(128,128,128,0.1); }\n[name="grab-t"] { top: 0px; left: var(--corner-size); right: var(--corner-size); height: var(--size); margin-top: var(--offset); cursor: ns-resize; }\n[name="grab-r"] { top: var(--corner-size); bottom: var(--corner-size); right: 0px; width: var(--size); margin-right: var(--offset); \n  cursor: ew-resize; }\n[name="grab-b"] { bottom: 0px; left: var(--corner-size); right: var(--corner-size); height: var(--size); margin-bottom: var(--offset); cursor: ns-resize; }\n[name="grab-l"] { top: var(--corner-size); bottom: var(--corner-size); left: 0px; width: var(--size); margin-left: var(--offset); cursor: ew-resize; }\n[name="grab-tl"] { top: 0px; left: 0px; width: var(--corner-size); height: var(--corner-size); margin-top: var(--offset); margin-left: var(--offset); cursor: nwse-resize; }\n[name="grab-tr"] { top: 0px; right: 0px; width: var(--corner-size); height: var(--corner-size); margin-top: var(--offset); margin-right: var(--offset); cursor: nesw-resize; }\n[name="grab-br"] { bottom: 0px; right: 0px; width: var(--corner-size); height: var(--corner-size); margin-bottom: var(--offset); margin-right: var(--offset); cursor: nwse-resize; }\n[name="grab-bl"] { bottom: 0px; left: 0px; width: var(--corner-size); height: var(--corner-size); margin-bottom: var(--offset); margin-left: var(--offset); cursor: nesw-resize; }\n');const n=((e,t,n=!1)=>e.replace(/\{\{([\w_]+)\}\}/g,((e,i)=>t[i]||(n?"":e))))('\n<div id="undiscord" class="browser container redact" style="display:none;">\n    <div class="header">\n        <svg class="icon" aria-hidden="false" width="24" height="24" viewBox="0 0 24 24">\n            <path fill="currentColor" d="M15 3.999V2H9V3.999H3V5.999H21V3.999H15Z"></path>\n            <path fill="currentColor"\n                d="M5 6.99902V18.999C5 20.101 5.897 20.999 7 20.999H17C18.103 20.999 19 20.101 19 18.999V6.99902H5ZM11 17H9V11H11V17ZM15 17H13V11H15V17Z">\n            </path>\n        </svg>\n        <h3>Undiscord</h3>\n        <div class="vert-divider"></div>\n        <span> Bulk delete messages</span>\n        <div class="spacer"></div>\n        <div id="hide" class="icon" aria-label="Close" role="button" tabindex="0">\n            <svg aria-hidden="false" width="24" height="24" viewBox="0 0 24 24">\n                <path fill="currentColor"\n                    d="M18.4 4L12 10.4L5.6 4L4 5.6L10.4 12L4 18.4L5.6 20L12 13.6L18.4 20L20 18.4L13.6 12L20 5.6L18.4 4Z">\n                </path>\n            </svg>\n        </div>\n    </div>\n    <div class="window-body" style="display: flex; flex-direction: row;">\n        <div class="sidebar scroll">\n            <details open>\n                <summary>General</summary>\n                <fieldset>\n                    <legend>\n                        Author ID\n                        <a href="{{WIKI}}/authorId" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="multiInput">\n                        <div class="input-wrapper">\n                            <input class="input" id="authorId" type="text" priv>\n                        </div>\n                        <button id="getAuthor">me</button>\n                    </div>\n                </fieldset>\n                <hr>\n                <fieldset>\n                    <legend>\n                        Server ID\n                        <a href="{{WIKI}}/guildId" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="multiInput">\n                        <div class="input-wrapper">\n                            <input class="input" id="guildId" type="text" priv>\n                        </div>\n                        <button id="getGuild">current</button>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <legend>\n                        Channel ID\n                        <a href="{{WIKI}}/channelId" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="multiInput mb1">\n                        <div class="input-wrapper">\n                            <input class="input" id="channelId" type="text" priv>\n                        </div>\n                        <button id="getChannel">current</button>\n                    </div>\n                    <div class="sectionDescription">\n                        <label class="row"><input id="includeNsfw" type="checkbox">This is a NSFW channel</label>\n                    </div>\n                </fieldset>\n            </details>\n            <details>\n                <summary>Wipe Archive</summary>\n                <fieldset>\n                    <legend>\n                        Import index.json\n                        <a href="{{WIKI}}/importJson" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="input-wrapper">\n                        <input type="file" id="importJsonInput" accept="application/json,.json" style="width:100%";>\n                    </div>\n                    <div class="sectionDescription">\n                        <br>\n                        After requesting your data from discord, you can import it here.<br>\n                        Select the "messages/index.json" file from the discord archive.\n                    </div>\n                </fieldset>\n            </details>\n            <hr>\n            <details>\n                <summary>Filter</summary>\n                <fieldset>\n                    <legend>\n                        Search\n                        <a href="{{WIKI}}/filters" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="input-wrapper">\n                        <input id="search" type="text" placeholder="Containing text" priv>\n                    </div>\n                    <div class="sectionDescription">\n                        Only delete messages that contain the text\n                    </div>\n                    <div class="sectionDescription">\n                        <label><input id="hasLink" type="checkbox">has: link</label>\n                    </div>\n                    <div class="sectionDescription">\n                        <label><input id="hasFile" type="checkbox">has: file</label>\n                    </div>\n                    <div class="sectionDescription">\n                        <label><input id="includePinned" type="checkbox">Include pinned</label>\n                    </div>\n                </fieldset>\n                <hr>\n                <fieldset>\n                    <legend>\n                        Pattern\n                        <a href="{{WIKI}}/pattern" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="sectionDescription">\n                        Delete messages that match the regular expression\n                    </div>\n                    <div class="input-wrapper">\n                        <span class="info">/</span>\n                        <input id="pattern" type="text" placeholder="regular expression" priv>\n                        <span class="info">/</span>\n                    </div>\n                </fieldset>\n            </details>\n            <details>\n                <summary>Messages interval</summary>\n                <fieldset>\n                    <legend>\n                        Interval of messages\n                        <a href="{{WIKI}}/messageId" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="multiInput mb1">\n                        <div class="input-wrapper">\n                            <input id="minId" type="text" placeholder="After a message" priv>\n                        </div>\n                        <button id="pickMessageAfter">Pick</button>\n                    </div>\n                    <div class="multiInput">\n                        <div class="input-wrapper">\n                            <input id="maxId" type="text" placeholder="Before a message" priv>\n                        </div>\n                        <button id="pickMessageBefore">Pick</button>\n                    </div>\n                    <div class="sectionDescription">\n                        Specify an interval to delete messages.\n                    </div>\n                </fieldset>\n            </details>\n            <details>\n                <summary>Date interval</summary>\n                <fieldset>\n                    <legend>\n                        After date\n                        <a href="{{WIKI}}/dateRange" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="input-wrapper mb1">\n                        <input id="minDate" type="datetime-local" title="Messages posted AFTER this date">\n                    </div>\n                    <legend>\n                        Before date\n                        <a href="{{WIKI}}/dateRange" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="input-wrapper">\n                        <input id="maxDate" type="datetime-local" title="Messages posted BEFORE this date">\n                    </div>\n                    <div class="sectionDescription">\n                        Delete messages that were posted between the two dates.\n                    </div>\n                    <div class="sectionDescription">\n                        * Filtering by date doesn\'t work if you use the "Messages interval".\n                    </div>\n                </fieldset>\n            </details>\n            <hr>\n            <details>\n                <summary>Advanced settings</summary>\n                <fieldset>\n                    <legend>\n                        Search delay\n                        <a href="{{WIKI}}/delay" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="input-wrapper">\n                        <input id="searchDelay" type="range" value="30000" step="100" min="100" max="60000">\n                        <div id="searchDelayValue"></div>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <legend>\n                        Delete delay\n                        <a href="{{WIKI}}/delay" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="input-wrapper">\n                        <input id="deleteDelay" type="range" value="1000" step="50" min="50" max="10000">\n                        <div id="deleteDelayValue"></div>\n                    </div>\n                    <br>\n                    <div class="sectionDescription">\n                        This will affect the speed in which the messages are deleted.\n                        Use the help link for more information.\n                    </div>\n                </fieldset>\n                <hr>\n                <fieldset>\n                    <legend>\n                        Authorization Token\n                        <a href="{{WIKI}}/authToken" title="Help" target="_blank" rel="noopener noreferrer">help</a>\n                    </legend>\n                    <div class="multiInput">\n                        <div class="input-wrapper">\n                            <input class="input" id="token" type="password" autocomplete="dont" priv>\n                        </div>\n                        <button id="getToken">fill</button>\n                    </div>\n                </fieldset>\n            </details>\n            <hr>\n            <div></div>\n            <div class="info">\n                Undiscord {{VERSION}}\n                <br> victornpb\n            </div>\n        </div>\n        <div class="main col">\n            <div class="tbar col">\n                <div class="row">\n                    <button id="toggleSidebar" class="sizeMedium icon">â˜°</button>\n                    <button id="start" class="sizeMedium danger" style="width: 150px;" title="Start the deletion process">â–¶ï¸Ž Delete</button>\n                    <button id="stop" class="sizeMedium" title="Stop the deletion process" disabled>ðŸ›‘ Stop</button>\n                    <button id="clear" class="sizeMedium">Clear log</button>\n                    <label class="row" title="Hide sensitive information on your screen for taking screenshots">\n                        <input id="redact" type="checkbox" checked> Streamer mode\n                    </label>\n                </div>\n                <div class="row">\n                    <progress id="progressBar" style="display:none;"></progress>\n                </div>\n            </div>\n            <pre id="logArea" class="logarea scroll">\n                <div class="" style="background: var(--background-mentioned); padding: .5em;">Notice: Undiscord may be working slower than usual and<wbr>require multiple attempts due to a recent Discord update.<br>We\'re working on a fix, and we thank you for your patience.</div>\n                <center>\n                    <div>Star <a href="{{HOME}}" target="_blank" rel="noopener noreferrer">this project</a> on GitHub!</div>\n                    <div><a href="{{HOME}}/discussions" target="_blank" rel="noopener noreferrer">Issues or help</a></div>\n                </center>\n            </pre>\n            <div class="tbar footer row">\n                <div id="progressPercent"></div>\n                <span class="spacer"></span>\n                <label>\n                    <input id="autoScroll" type="checkbox" checked> Auto scroll\n                </label>\n                <div class="resize-handle"></div>\n            </div>\n        </div>\n    </div>\n</div>\n\n',{VERSION:"5.2.3",HOME:"https://github.com/victornpb/undiscord",WIKI:"https://github.com/victornpb/undiscord/wiki"});function s(){const e=document.querySelector("#app-mount [class^=toolbar]");e&&e.appendChild(w.undiscordBtn)}w.undiscordWindow=h(n),document.body.appendChild(w.undiscordWindow),new a({elm:w.undiscordWindow,moveHandle:y(".header")}),w.undiscordBtn=h('\n<div id="undicord-btn" tabindex="0" role="button" aria-label="Delete Messages" title="Delete Messages with Undiscord">\n    <svg aria-hidden="false" width="24" height="24" viewBox="0 0 24 24">\n        <path fill="currentColor" d="M15 3.999V2H9V3.999H3V5.999H21V3.999H15Z"></path>\n        <path fill="currentColor" d="M5 6.99902V18.999C5 20.101 5.897 20.999 7 20.999H17C18.103 20.999 19 20.101 19 18.999V6.99902H5ZM11 17H9V11H11V17ZM15 17H13V11H15V17Z"></path>\n    </svg>\n    <progress></progress>\n</div>\n'),w.undiscordBtn.onclick=d,s();const r=document.querySelector("#app-mount");let o=null;function d(){"none"!==w.undiscordWindow.style.display?(w.undiscordWindow.style.display="none",w.undiscordBtn.style.color="var(--interactive-normal)"):(w.undiscordWindow.style.display="",w.undiscordBtn.style.color="var(--interactive-active)")}new MutationObserver(((e,t)=>{o||(o=setTimeout((()=>{o=null,r.contains(w.undiscordBtn)||s()}),3e3))})).observe(r,{attributes:!1,childList:!0,subtree:!0}),w.logArea=y("#logArea"),w.autoScroll=y("#autoScroll"),w.progressMain=y("#progressBar"),w.progressIcon=w.undiscordBtn.querySelector("progress"),w.percent=y("#progressPercent"),y("#hide").onclick=d,y("#toggleSidebar").onclick=()=>w.undiscordWindow.classList.toggle("hide-sidebar"),y("button#start").onclick=I,y("button#stop").onclick=_,y("button#clear").onclick=()=>w.logArea.innerHTML="",y("button#getAuthor").onclick=()=>y("input#authorId").value=g(),y("button#getGuild").onclick=()=>{"@me"===(y("input#guildId").value=m())&&(y("input#channelId").value=v())},y("button#getChannel").onclick=()=>{y("input#channelId").value=v(),y("input#guildId").value=m()},y("#redact").onchange=()=>{w.undiscordWindow.classList.toggle("redact")&&alert("This mode will attempt to hide personal information, so you can screen share / take screenshots.\nAlways double check you are not sharing sensitive information!")},y("#pickMessageAfter").onclick=async()=>{alert("Select a message on the chat.\nThe message below it will be deleted."),d();const e=await p.grab("after");e&&(y("input#minId").value=e),d()},y("#pickMessageBefore").onclick=async()=>{alert("Select a message on the chat.\nThe message above it will be deleted."),d();const e=await p.grab("before");e&&(y("input#maxId").value=e),d()},y("button#getToken").onclick=()=>y("input#token").value=b(),y("input#searchDelay").onchange=e=>{const t=parseInt(e.target.value);t&&(x.options.searchDelay=t)},y("input#deleteDelay").onchange=e=>{const t=parseInt(e.target.value);t&&(x.options.deleteDelay=t)},y("input#searchDelay").addEventListener("input",(e=>{y("div#searchDelayValue").textContent=e.target.value+"ms"})),y("input#deleteDelay").addEventListener("input",(e=>{y("div#deleteDelayValue").textContent=e.target.value+"ms"}));const l=y("input#importJsonInput");l.onchange=async()=>{const t=l.files;if(0===t.length)return e.warn("No file selected.");const n=y("input#channelId");y("input#guildId").value="@me",y("input#authorId").value=g();try{const i=t[0],s=await i.text(),r=JSON.parse(s),o=Object.keys(r);n.value=o.join(","),e.info(`Loaded ${o.length} channels.`)}catch(t){e.error("Error parsing file!",t)}},t=k,x.onStart=(e,t)=>{console.log(f,"onStart",e,t),y("#start").disabled=!0,y("#stop").disabled=!1,w.undiscordBtn.classList.add("running"),w.progressMain.style.display="block",w.percent.style.display="block"},x.onProgress=(e,t)=>{let n=e.grandTotal;const s=e.delCount+e.failCount;n=Math.max(n,s,0);const r=s>=0&&n?Math.round(s/n*100)+"%":"",o=i(Date.now()-t.startTime.getTime()),a=i(t.etr);w.percent.innerHTML=`${r} (${s}/${n}) Elapsed: ${o} Remaining: ${a}`,w.progressIcon.value=s,w.progressMain.value=s,n?(w.progressIcon.setAttribute("max",n),w.progressMain.setAttribute("max",n)):(w.progressIcon.removeAttribute("value"),w.progressMain.removeAttribute("value"),w.percent.innerHTML="..."),y("input#searchDelay").value=x.options.searchDelay,y("div#searchDelayValue").textContent=x.options.searchDelay+"ms",y("input#deleteDelay").value=x.options.deleteDelay,y("div#deleteDelayValue").textContent=x.options.deleteDelay+"ms"},x.onStop=(e,t)=>{console.log(f,"onStop",e,t),y("#start").disabled=!1,y("#stop").disabled=!0,w.undiscordBtn.classList.remove("running"),w.progressMain.style.display="none",w.percent.style.display="none"}}()}();